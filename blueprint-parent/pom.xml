<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!--
      You will need to change the groupId in all modules
      A global search&replace will do the job !
  -->
  <groupId>com.coremedia.blueprint</groupId>
  <artifactId>blueprint-parent</artifactId>
  <version>1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>blueprint-parent</name>

  <organization>
    <name>Blueprint</name>
  </organization>

  <properties>
    <failOnWarning>true</failOnWarning>
    <coremedia.enforcer.fail>true</coremedia.enforcer.fail>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <compile.source.jdk>1.8</compile.source.jdk>
    <compile.target.jdk>1.8</compile.target.jdk>

    <google.api.services.analytics.version>v3-rev99-1.19.0</google.api.services.analytics.version>
    <google.api.services.youtube.version>v3-rev152-1.19.0</google.api.services.youtube.version>
    <google.api.client.version>1.19.0</google.api.client.version>

    <customer>Blueprint</customer>

    <blueprint-base.version>1801.2</blueprint-base.version>
    <cms.version>1801.2</cms.version>
    <personalization.version>1801.2</personalization.version>
    <elastic.version>1801.2</elastic.version><!-- Note: Keep in sync with (intentionally) duplicated property in internal/coremedia-bom/pom.xml! -->
    <studio.version>1801.2</studio.version>
    <caetoolbox.version>1801.2</caetoolbox.version>
    <livecontext.version>1801.2</livecontext.version>
    <jangaroo.version>4.0.55</jangaroo.version>
    <jangaroo.libs.version>4.0.39</jangaroo.libs.version>

    <atlassian.crowd.version>2.5.1</atlassian.crowd.version>
    <!--
     | Version for WAR based deployment. Tomcat 7 and 8 are supported. Don't forget to set the Chef attributes in the
     | Chef blueprint-tomcat cookbook accordingly
    -->
    <tomcat.version>7.0.82</tomcat.version>
    <!-- Version for Maven tomcat7 plugin. Only Tomcat 7 is supported -->
    <tomcat.maven.version>7.0.82</tomcat.maven.version>
    <spring.boot.version>1.5.4.RELEASE</spring.boot.version>
    <application-plugin.version>2.7.10</application-plugin.version>

    <!--
    | the following *.host properties are defined here for convenience, so that they can be overridden
    | via a profile in the settings.xml.
    | If you want to develop applications against services started either in a shared deployment on a remote machine
    | or against services running in your development VMs you need to add a profile that overrides these properties.
    | if all services are running on one box you can use installation
    -->
    <installation.host>localhost</installation.host>
    <solr.host>${installation.host}</solr.host>
    <content-management-server.host>${installation.host}</content-management-server.host>
    <workflow-server.host>${installation.host}</workflow-server.host>
    <master-live-server.host>${installation.host}</master-live-server.host>
    <replication-live-server.host>${installation.host}</replication-live-server.host>
    <studio.host>${installation.host}</studio.host>
    <cae-preview.host>${installation.host}</cae-preview.host>
    <cae-live.host>${installation.host}</cae-live.host>
    <db.host>${installation.host}</db.host>
    <mongoDb.host>${installation.host}</mongoDb.host>
    <wcs.host>${installation.host}</wcs.host>
    <hybris.host>${installation.host}</hybris.host>
    <livecontext.sfcc.host>${installation.host}</livecontext.sfcc.host>
    <proxy.host>${installation.host}</proxy.host>

    <!-- logback appender for maven tomcat plugin start -->
    <!-- possible values: console, file, logstash-tcp, logstash-file -->
    <log.appender>file</log.appender>

    <caplist>com.coremedia.cotopaxi.list.elastic.mongodb.MongoCapListConnectorFactory</caplist>

    <!--
     | The base directory to persist transformed blobs, when starting CAE or Studio during development using the tomcat7-maven-plugin.
     | The path defined here will be suffixed with the artifactId of the module starting the tomcat plugin to prevent cache conflicts
     | between two processes when this property is set to a common value for all modules. With the default set to
     | project.build.directory, the transformed blobs will be available until the next mvn clean is called. 
     | Set this property to a path outside the workspace to keep the transformed blobs permanently.
     -->
    <development.blobCache.basePath>${project.build.directory}/blobcache</development.blobCache.basePath>

    <!-- Some values for the ThemeImporter exec-maven-plugin configuration -->
    <theme-importer.argument.folder>-Dthemes_folder=${project.build.directory}/themes</theme-importer.argument.folder>
    <theme-importer.argument.export-path>-Dexport_path=${project.build.directory}/content</theme-importer.argument.export-path>
    <theme-importer.argument.runner>com.coremedia.blueprint.themeimporter.client.ThemeImporterRunner</theme-importer.argument.runner>
    <jooProxyPathSpec>/rest/*</jooProxyPathSpec>
  </properties>

  <profiles>
    <profile>
      <id>joo-unit-tests</id>
      <activation>
        <file>
          <exists>/usr/local/bin/phantomjs</exists>
        </file>
        <property>
          <name>phantomjs.bin</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>net.jangaroo</groupId>
            <artifactId>jangaroo-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
              <jooUnitTestExecutionTimeout>30000</jooUnitTestExecutionTimeout>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <prerequisites>
    <maven>3.1</maven>
  </prerequisites>

  <scm>
    <connection>scm:git:git@github.com:CoreMedia/cms.git</connection>
    <developerConnection>scm:git:git@github.com:CoreMedia/cms.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>localfs</id>
      <url>file://${project.basedir}/target</url>
    </snapshotRepository>
    <repository>
      <id>coremedia.external.releases</id>
      <url>https://repository.coremedia.com/nexus/service/local/staging/deploy/maven2</url>
    </repository>
    <site>
      <id>localsite</id>
      <url>file://${project.basedir}/target/site-deploy</url>
    </site>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>core-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.blueprint.base</groupId>
        <artifactId>blueprint-base-bom</artifactId>
        <version>${blueprint-base.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>cms-thirdparty-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.ui</groupId>
        <artifactId>studio-bom</artifactId>
        <version>${studio.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- management of elastic social (3rd party) libs -->
      <dependency>
        <groupId>com.coremedia.elastic.core</groupId>
        <artifactId>core-bom</artifactId>
        <version>${elastic.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.elastic.social</groupId>
        <artifactId>social-bom</artifactId>
        <version>${elastic.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.coremedia.personalization</groupId>
        <artifactId>personalization-bom</artifactId>
        <version>${personalization.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- LC API version management -->
      <dependency>
        <groupId>com.coremedia.livecontext</groupId>
        <artifactId>livecontext-bom</artifactId>
        <version>${livecontext.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>commons-httpclient</groupId>
        <artifactId>commons-httpclient</artifactId>
        <version>3.1</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.codehaus.janino</groupId>
        <artifactId>janino</artifactId>
        <version>2.6.1</version>
      </dependency>

      <dependency>
        <groupId>com.atlassian.crowd</groupId>
        <artifactId>crowd-integration-client-rest</artifactId>
        <version>${atlassian.crowd.version}</version>
      </dependency>
      <dependency>
        <groupId>com.atlassian.crowd</groupId>
        <artifactId>crowd-integration-api</artifactId>
        <version>${atlassian.crowd.version}</version>
      </dependency>
      <dependency>
        <groupId>com.atlassian.crowd</groupId>
        <artifactId>embedded-crowd-api</artifactId>
        <version>${atlassian.crowd.version}</version>
      </dependency>
      <dependency>
        <groupId>com.atlassian.crowd</groupId>
        <artifactId>crowd-integration-client-common</artifactId>
        <version>${atlassian.crowd.version}</version>
      </dependency>

      <dependency>
        <groupId>org.skyscreamer</groupId>
        <artifactId>jsonassert</artifactId>
        <version>1.2.1</version>
      </dependency>

      <dependency>
        <groupId>uk.com.robust-it</groupId>
        <artifactId>cloning</artifactId>
        <version>1.9.1</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.mobile</groupId>
        <artifactId>spring-mobile-device</artifactId>
        <version>1.0.1.RELEASE</version>
      </dependency>

      <dependency>
        <groupId>co.freeside</groupId>
        <artifactId>betamax</artifactId>
        <version>1.1.2</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-all</artifactId>
        <version>2.4.12</version>
        <classifier>indy</classifier>
      </dependency>

    </dependencies>
  </dependencyManagement>


  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>overlays</directory>
                <includes>
                  <include>**/*.*</include>
                </includes>
                <followSymlinks>false</followSymlinks>
              </fileset>
              <!-- node is created by frontend-maven-plugin -->
              <fileset>
                <directory>node</directory>
              </fileset>
            </filesets>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.6.0</version>
          <configuration>
            <source>${compile.source.jdk}</source>
            <target>${compile.target.jdk}</target>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>1.6</version>
          <configuration>
            <nodeVersion>v8.9.4</nodeVersion><!-- LTS -->
            <yarnVersion>v1.3.2</yarnVersion>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.19.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
          <configuration>
            <archive>
              <addMavenDescriptor>true</addMavenDescriptor>
              <forced>false</forced>
              <manifestEntries>
                <Built-By>${customer}</Built-By>
                <Build-Jdk>${java.version}</Build-Jdk>
                <Implementation-Build>revision: ${buildNumber} - ${maven.build.timestamp}</Implementation-Build>
                <Implementation-Title>${project.artifactId}</Implementation-Title>
                <Implementation-Vendor>${customer}</Implementation-Vendor>
                <Implementation-Version>${project.version}</Implementation-Version>
                <X-Compile-Source-JDK>${compile.source.jdk}</X-Compile-Source-JDK>
                <X-Compile-Target-JDK>${compile.target.jdk}</X-Compile-Target-JDK>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jarsigner-plugin</artifactId>
          <version>1.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.10.4</version>
          <configuration>
            <additionalparam>-Xdoclint:none</additionalparam>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
          <configuration>
            <includeEmptyDirs>true</includeEmptyDirs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.4</version>
          <configuration>
            <!--
             | ===== BE CAREFULL ======
             | with 3.5 skip implies skipDeploy. Therfore, we cannot upgrade the site plugin without reworking the
             | whole site creation process
             -->
            <skip>true</skip>
            <skipDeploy>true</skipDeploy>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.19.1</version>
          <configuration>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <systemPropertyVariables>
              <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>2.19.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.0.0</version>
          <configuration>
            <archive>
              <addMavenDescriptor>false</addMavenDescriptor>
              <forced>false</forced>
              <manifestEntries>
                <Built-By>${customer}</Built-By>
                <Build-Jdk>${java.version}</Build-Jdk>
                <Implementation-Build>revision: ${buildNumber} - ${maven.build.timestamp}</Implementation-Build>
                <Implementation-Title>${project.artifactId}</Implementation-Title>
                <Implementation-Vendor>${customer}</Implementation-Vendor>
                <Implementation-Version>${project.version}</Implementation-Version>
                <X-Compile-Source-JDK>${compile.source.jdk}</X-Compile-Source-JDK>
                <X-Compile-Target-JDK>${compile.target.jdk}</X-Compile-Target-JDK>
              </manifestEntries>
            </archive>
            <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>1.0-alpha-2</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.5.0</version>
        </plugin>

        <plugin>
          <groupId>com.coremedia.maven</groupId>
          <artifactId>coremedia-application-maven-plugin</artifactId>
          <version>${application-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>2.2</version>
          <configuration>
            <uriEncoding>utf-8</uriEncoding>
            <systemProperties>
              <!--
               | By passing these through, we do not have to define them each time in any submodule.
               | If however, you want to suppress them, you need to set the attribute combine.self="override" on the
               | systemProperties element, see https://maven.apache.org/pom.html for more information
              -->
              <solr.host>${solr.host}</solr.host>
              <content-management-server.host>${content-management-server.host}</content-management-server.host>
              <workflow-server.host>${workflow-server.host}</workflow-server.host>
              <master-live-server.host>${master-live-server.host}</master-live-server.host>
              <replication-live-server.host>${replication-live-server.host}</replication-live-server.host>
              <studio.host>${studio.host}</studio.host>
              <cae-preview.host>${cae-preview.host}</cae-preview.host>
              <cae-live.host>${cae-live.host}</cae-live.host>
              <db.host>${db.host}</db.host>
              <mongoDb.host>${mongoDb.host}</mongoDb.host>
              <wcs.host>${wcs.host}</wcs.host>
              <hybris.host>${hybris.host}</hybris.host>
              <livecontext.sfcc.host>${livecontext.sfcc.host}</livecontext.sfcc.host>
              <proxy.host>${proxy.host}</proxy.host>
              <log.appender>${log.appender}</log.appender>
              <application.name>${project.build.finalName}</application.name>
              <project.basedir>${project.basedir}</project.basedir>
              <com.coremedia.transform.blobCache.basePath>${development.blobCache.basePath}/${project.artifactId}</com.coremedia.transform.blobCache.basePath>
            </systemProperties>
            <additionalClasspathDirs>
              <additionalClasspathDir>${development-properties.dir}</additionalClasspathDir>
              <!-- Load logback.xml from workspace-config -->
              <additionalClasspathDir>${logging-properties.dir}</additionalClasspathDir>
            </additionalClasspathDirs>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-util</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-coyote</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-api</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-jdbc</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-dbcp</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-servlet-api</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-jsp-api</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-jasper</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-jasper-el</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-el-api</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-catalina</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-tribes</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-catalina-ha</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-annotations-api</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-juli</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <!--These versions are correct here, even though the dependencies are "embed" ones-->
            <dependency>
              <groupId>org.apache.tomcat.embed</groupId>
              <artifactId>tomcat-embed-core</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat.embed</groupId>
              <artifactId>tomcat-embed-logging-juli</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat.embed</groupId>
              <artifactId>tomcat-embed-logging-log4j</artifactId>
              <version>${tomcat.maven.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.12</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.4</version>
        </plugin>
        <plugin>
          <groupId>com.lazerycode.jmeter</groupId>
          <artifactId>jmeter-maven-plugin</artifactId>
          <version>2.0.3</version>
        </plugin>
        <plugin>
          <groupId>com.lazerycode.jmeter</groupId>
          <artifactId>jmeter-analysis-maven-plugin</artifactId>
          <version>1.0.6</version>
        </plugin>


        <!-- see http://code.google.com/p/sortpom/ -->
        <!-- To start: mvn com.google.code.sortpom:maven-sortpom-plugin:sort -->
        <!-- or with configured pluginGroups: mvn sortpom:sort -->
        <plugin>
          <groupId>com.google.code.sortpom</groupId>
          <artifactId>maven-sortpom-plugin</artifactId>
          <version>2.3.1</version>
          <configuration>
            <!-- POM Code Convention - http://maven.apache.org/developers/conventions/code.html#POM_Code_Convention -->
            <sortOrderFile>recommended_2008_06.xml</sortOrderFile>
            <createBackupFile>false</createBackupFile>
            <expandEmptyElements>false</expandEmptyElements>
            <keepBlankLines>true</keepBlankLines>
            <verifyFail>Warn</verifyFail>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.google.code.maven-replacer-plugin</groupId>
          <artifactId>replacer</artifactId>
          <version>1.5.3</version>
        </plugin>
        <plugin>
          <groupId>net.jangaroo</groupId>
          <artifactId>jangaroo-maven-plugin</artifactId>
          <version>${jangaroo.version}</version>
          <configuration>
            <jooProxyPathSpec>${jooProxyPathSpec}</jooProxyPathSpec>
          </configuration>
        </plugin>
        <plugin>
          <groupId>net.jangaroo</groupId>
          <artifactId>webjars-maven-plugin</artifactId>
          <version>${jangaroo.version}</version>
        </plugin>
        <plugin>
          <groupId>net.jangaroo</groupId>
          <artifactId>smartsprites-maven-plugin</artifactId>
          <version>1.8</version>
        </plugin>

        <plugin>
          <groupId>org.primefaces.extensions</groupId>
          <artifactId>resources-optimizer-maven-plugin</artifactId>
          <version>2.2.0</version>
        </plugin>
      </plugins>

    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>create-buildnumber-of-git-revision</id>
            <phase>initialize</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>analyze-duplicate</goal>
            </goals>
            <phase>validate</phase>
          </execution>
          <execution>
            <id>default-cli</id>
            <goals>
              <goal>analyze-only</goal>
            </goals>
            <configuration>
              <failOnWarning>${failOnWarning}</failOnWarning>
              <ignoreNonCompile>true</ignoreNonCompile>
              <outputXML>true</outputXML>
              <ignoredUnusedDeclaredDependencies>
                <!--ignore analyzing swc-->
                <ignoredUnusedDeclaredDependency>::swc</ignoredUnusedDeclaredDependency>
              </ignoredUnusedDeclaredDependencies>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>com.coremedia.maven</groupId>
            <artifactId>coremedia-enforcer-rules</artifactId>
            <version>1.1.2</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>enforce-onerepo-rules</id>
            <configuration>
              <rules>
                <myCustomRule implementation="com.coremedia.maven.enforcer.OneRepoEnforcerRule"/>
              </rules>
              <fail>${coremedia.enforcer.fail}</fail>
            </configuration>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
          </execution>
          <execution>
            <id>enforce-no-web-fragments</id>
            <!-- web-fragments have been converted to java (spring) config -->
            <configuration>
              <rules>
                <requireFilesDontExist>
                  <files>
                    <file>${project.basedir}/src/main/resources/META-INF/web-fragment.xml</file>
                  </files>
                </requireFilesDontExist>
              </rules>
            </configuration>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
          </execution>
          <execution>
            <id>enforce-versions</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[1.8,)</version>
                </requireJavaVersion>
                <DependencyConvergence/>
                <bannedDependencies>
                  <excludes>
                    <!-- excluded because of conflict with logback -->
                    <exclude>commons-logging:commons-logging</exclude>
                    <!-- excluded because already included in jdk 6 -->
                    <exclude>stax:stax-api</exclude>
                    <exclude>org.apache.geronimo.specs:geronimo-stax-api_1.0_spec</exclude>
                    <exclude>org.mockito:mockito-all</exclude>
                    <!-- excluded servlet, jsp, and el APIs because the new artifactIds changed,
                                             and we do not want to include both old and new versions -->
                    <exclude>javax.servlet:servlet-api</exclude>
                    <exclude>javax.servlet.jsp:jsp-api</exclude>
                    <exclude>javax.servlet.jsp.jstl:jstl-api</exclude>
                    <exclude>javax.el:el-api</exclude>
                    <!-- exclude, and include only with scope "provided" -->
                    <exclude>javax.servlet:javax.servlet-api</exclude>
                    <!-- junit:junit vs. junit:junit-dep: Since JUnit 4.11 junit-dep just relocates to
                         junit and files a warning when used. Thus excluding it here. -->
                    <exclude>junit:junit-dep</exclude>
                    <exclude>xalan:xalan</exclude>
                    <exclude>xerces:xercesImpl</exclude>
                    <exclude>xml-apis:xml-apis</exclude>
                    <exclude>rhino:js</exclude>
                    <!-- uses GPL -->
                    <exclude>net.joala:*</exclude>
                    <!-- JDK5 -->
                    <exclude>com.google.guava:guava-jdk5</exclude>
                  </excludes>
                  <includes>
                    <!--
                      Do not even allow scope "test", since it overrides a transitive "provided".
                      S. http://www.sonatype.com/books/mvnref-book/reference/pom-relationships-sect-project-dependencies.html#pom-relationships-sect-transitive
                    -->
                    <include>javax.servlet:javax.servlet-api:*:*:provided</include>
                  </includes>
                </bannedDependencies>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.coremedia.maven</groupId>
        <artifactId>coremedia-application-maven-plugin</artifactId>
        <version>${application-plugin.version}</version>
        <extensions>true</extensions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <excludeDefaults>true</excludeDefaults>
  </reporting>

  <repositories>
    <repository>
      <id>coremedia.external.livecontext.releases</id>
      <name>CoreMedia CMS</name>
      <url>https://repository.coremedia.com/nexus/content/repositories/livecontext-releases/</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>coremedia.external.releases</id>
      <name>CoreMedia CMS</name>
      <url>https://repository.coremedia.com/nexus/content/groups/cms/</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>coremedia.external.livecontext.releases</id>
      <name>CoreMedia CMS</name>
      <url>https://repository.coremedia.com/nexus/content/repositories/livecontext-releases/</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>coremedia.external.releases</id>
      <name>CoreMedia CMS</name>
      <url>https://repository.coremedia.com/nexus/content/groups/cms/</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

</project>
