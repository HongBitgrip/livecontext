<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.coremedia.blueprint</groupId>
    <artifactId>search</artifactId>
    <version>1-SNAPSHOT</version>
  </parent>

  <artifactId>solr-config</artifactId>
  <packaging>coremedia-application</packaging>

  <description>
    Configuration of Apache Solr for CoreMedia.

    You can start Solr for local development with the exec-maven-plugin from this POM as follows:

    Prerequisites:

    - Download the official Solr distribution,
      for example from http://archive.apache.org/dist/lucene/solr/6.6.2/solr-6.6.2.tgz
    - Extract it into a directory of your choice
    - Set the environment variable SOLR_SCRIPT to point to the Solr start/stop script
      in the extracted directory. Choose "bin/solr" for Unix or "bin/solr.cmd" for a Windows shell.

    You can then start and stop Solr, with its admin interface available at http://localhost:40080/solr
    - mvn exec:exec@start-solr
    - mvn exec:exec@stop-solr

    You can additionally start and stop a Solr Slave, with its admin interface available at http://localhost:40081/solr
    - mvn exec:exec@start-solr-slave
    - mvn exec:exec@stop-solr-slave
  </description>

  <properties>
    <solr.port>40080</solr.port>
    <solr.slavePort>40081</solr.slavePort>
    <solr.coreRootDirectory>${project.build.directory}/cores</solr.coreRootDirectory>
    <solr.slaveCoreRootDirectory>${project.build.directory}/slave-cores</solr.slaveCoreRootDirectory>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- SOLR BOM IMPORT -->
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>solr-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>solr-configuration</artifactId>
      <type>coremedia-application</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>solr-configuration</artifactId>
      <type>pom</type>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>solr-config</finalName>
    <plugins>
      <plugin>
        <groupId>com.coremedia.maven</groupId>
        <artifactId>coremedia-application-maven-plugin</artifactId>
        <configuration>
          <!--exclude the empty lib dir we get from the skinny solr-configuration artifact-->
          <overlays>
            <overlay>
              <groupId>com.coremedia.cms</groupId>
              <artifactId>solr-configuration</artifactId>
              <excludes>
                <exclude>lib</exclude>
              </excludes>
            </overlay>
          </overlays>
        </configuration>
      </plugin>
      <plugin>
        <!-- must create empty directory to store Solr cores for "mvn exec:exec@start-..." to avoid errors in log -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>pre-integration-test</phase>
            <configuration>
              <target>
                <mkdir dir="${solr.coreRootDirectory}"/>
                <mkdir dir="${solr.slaveCoreRootDirectory}"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <configuration>
          <executable>${env.SOLR_SCRIPT}</executable>
          <environmentVariables>
            <SOLR_PID_DIR>${project.build.directory}</SOLR_PID_DIR>
          </environmentVariables>
        </configuration>
        <executions>
          <execution>
            <id>start-solr</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <commandlineArgs>start -s ${project.build.directory}/solr-config</commandlineArgs>
              <environmentVariables>
                <SOLR_LOGS_DIR>${project.build.directory}/logs</SOLR_LOGS_DIR>
                <SOLR_OPTS>-DcoreRootDirectory=${solr.coreRootDirectory} -Dsolr.master=true</SOLR_OPTS>
                <SOLR_PORT>${solr.port}</SOLR_PORT>
                <!-- STOP_PORT is <SOLR_PORT>-1000 = 39080. Cannot set a different port currently, see SOLR-9137 -->
              </environmentVariables>
            </configuration>
          </execution>
          <execution>
            <id>stop-solr</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <commandlineArgs>stop</commandlineArgs>
              <environmentVariables>
                <SOLR_PORT>${solr.port}</SOLR_PORT>
              </environmentVariables>
            </configuration>
          </execution>
          <execution>
            <id>start-solr-slave</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <commandlineArgs>start -s ${project.build.directory}/solr-config</commandlineArgs>
              <environmentVariables>
                <SOLR_LOGS_DIR>${project.build.directory}/slave-logs</SOLR_LOGS_DIR>
                <SOLR_OPTS>-DcoreRootDirectory=${solr.slaveCoreRootDirectory} -Dsolr.slave=true -Dsolr.master.url=http://localhost:${solr.port}/solr</SOLR_OPTS>
                <SOLR_PORT>${solr.slavePort}</SOLR_PORT>
                <!-- STOP_PORT is <SOLR_PORT>-1000 = 39081. Cannot set a different port currently, see SOLR-9137 -->
              </environmentVariables>
            </configuration>
          </execution>
          <execution>
            <id>stop-solr-slave</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <commandlineArgs>stop</commandlineArgs>
              <environmentVariables>
                <SOLR_PORT>${solr.slavePort}</SOLR_PORT>
              </environmentVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
