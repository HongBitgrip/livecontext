<?xml version="1.0" encoding="UTF-8"?>
<local:ThumbDataView
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:local="com.coremedia.cms.editor.sdk.collectionview.thumbnail.*"
        xmlns:exml="http://www.jangaroo.net/exml/0.8"
        xmlns="exml:ext.config"
        xmlns:ui="exml:com.coremedia.ui.config"
        ddHtmlFeedbackFunction="{CatalogDragDropVisualFeedback.getHtmlFeedback}"
        dragDDGroup="ContentDD"
        editable="false">
  <fx:Script><![CDATA[
    import com.coremedia.cms.editor.sdk.editorContext;
    import com.coremedia.ecommerce.studio.dragdrop.CatalogDragDropVisualFeedback;
    import com.coremedia.ecommerce.studio.helper.AugmentationUtil;
    import com.coremedia.ecommerce.studio.helper.CatalogHelper;
    import com.coremedia.ecommerce.studio.model.CatalogObject;

    public static const xtype:String = "com.coremedia.ecommerce.studio.config.catalogThumbDataView";

    private var config:CatalogThumbDataView;

    public native function CatalogThumbDataView(config:CatalogThumbDataView = null);
    ]]></fx:Script>
  <local:fields>
    <ui:DataField name="type"
                  mapping="name"
                  convert_="{function(v:String, catalogObject:CatalogObject):String {
                          return AugmentationUtil.getTypeLabel(catalogObject)}}"/>
    <ui:DataField name="docTypeClass"
                  mapping="name"
                  convert_="{function(v:String, catalogObject:CatalogObject):String {
                          return AugmentationUtil.getTypeCls(catalogObject)}}"/>
    <ui:DataField name="id"
                  mapping="externalId"/>
    <ui:DataField name="name"/>
    <data_AutoField
            name="imageUri"
            mapping="name"
            convert_="{function(v:String, catalogObject:CatalogObject):String {
                          return editorContext.getThumbnailUri(catalogObject, null, CatalogHelper.getInstance().getType(catalogObject))}}"/>
    <data_AutoField
            name="shortName"
            mapping="name"
            convert_="{function(v:String, catalogObject:CatalogObject):String {
                          return CatalogHelper.getInstance().getDecoratedName(catalogObject)}}"/>
  </local:fields>

</local:ThumbDataView>
